name: Test Docker Builds

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  find-and-test-dockerfiles:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Dockerfile builds
        shell: bash
        run: |
          mapfile -t dockerfiles < <(find templates -name "Dockerfile" -type f)

          if [ ${#dockerfiles[@]} -eq 0 ]; then
            echo "No Dockerfiles found in templates directory"
            exit 1
          fi

          successful_builds=0
          failed_builds=0

          for dockerfile in "${dockerfiles[@]}"; do
            echo "Testing Dockerfile: $dockerfile"
            echo "--------------------------------"

            build_dir=$(dirname "$dockerfile")
            template_dir=$(dirname "$build_dir")

            cd "$template_dir" || {
              echo "Failed to cd to $template_dir"
              exit 1
            }

            if docker build -f ".actor/Dockerfile" . --progress=plain; then
              echo "✓ Successfully built $dockerfile"
              (( successful_builds = successful_builds + 1 ))
            else
              echo "✗ Failed to build $dockerfile"
              (( failed_builds = failed_builds + 1 ))
            fi

            cd - >/dev/null || {
              echo "Failed to return to root directory"
              exit 1
            }

            echo "--------------------------------"
          done

          echo "Build Summary:"
          echo "Successful builds: $successful_builds"
          echo "Failed builds: $failed_builds"

          if [ $failed_builds -gt 0 ]; then
            echo "Some Dockerfile builds failed"
            exit 1
          else
            echo "All Dockerfiles built successfully!"
            exit 0
          fi

      - name: Cleanup
        if: always()
        run: |
          docker image prune -f
