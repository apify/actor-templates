{
    "templates": [
        {
            "id": "python-start",
            "name": "python-start",
            "label": "Start with Python",
            "category": "python",
            "description": "This example shows how to write a very simple Actor in Python using the Apify SDK. It reads and validates user input, performs a simple computation and saves the result to storage.",
            "messages": {
                "postCreate": "To install additional Python packages, you need to activate the virtual environment in the \".venv\" folder in the actor directory."
            },
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/python-start.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 1024,
                "timeoutSecs": 3600
            },
            "aliases": [
                "getting_started_python"
            ]
        },
        {
            "id": "python-beautifulsoup",
            "name": "python-beautifulsoup",
            "label": "BeautifulSoup & Requests",
            "category": "python",
            "technologies": [
                "requests",
                "beautifulsoup"
            ],
            "description": "This Actor example uses the popular Requests library to scrape URLs based on its input and then parses HTML using BeautifulSoup and saves results to storage. It also uses Apify SDK for URL queue management.",
            "messages": {
                "postCreate": "To install additional Python packages, you need to activate the virtual environment in the \".venv\" folder in the actor directory."
            },
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/python-beautifulsoup.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 1024,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "python-playwright",
            "name": "python-playwright",
            "label": "Playwright & Chrome",
            "category": "python",
            "technologies": [
                "playwright",
                "chrome"
            ],
            "description": "This crawler uses a headless Chrome browser driven by Playwright to scrape and parse URLs provided on input. Using a headless browser enables JavaScript rendering and can help overcome anti-scraping protections, but it's slower than using Requests + BeautifulSoup.",
            "messages": {
                "postCreate": "To run this actor, you need to have Playwright's browsers installed.\nTo do so, activate the virtual environment in the \".venv\" folder in the actor directory, and run \"playwright install --with-deps\".\nTo install additional Python packages, you need also need to activate the virtual environment in the \".venv\" folder in the actor directory.\n"
            },
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/python-playwright.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 1024,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "python-selenium",
            "name": "python-selenium",
            "label": "Selenium & Chrome",
            "category": "python",
            "technologies": [
                "selenium",
                "chrome"
            ],
            "description": "This example uses Selenium and headless Chrome to scrape URLs provided on Actor input and save the results to storage using Apify SDK. Alternatively you can use the Playwright example for the same purpose.",
            "messages": {
                "postCreate": "To run this actor, you need to have the Selenium ChromeDriver installed.\nTo install additional Python packages, you need to activate the virtual environment in the \".venv\" folder in the actor directory."
            },
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/python-selenium.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 1024,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "python-scrapy",
            "name": "python-scrapy",
            "label": "Scrapy",
            "category": "python",
            "technologies": [
                "scrapy"
            ],
            "description": "This example Actor uses a simple Scrapy spider to scrape popular quotes. The quotes can be filtered based on Actor input and they will be saved to Apify storage using Apify SDK for Python and Scrapy pipelines.",
            "messages": {
                "postCreate": "To install additional Python packages, you need to activate the virtual environment in the \".venv\" folder in the actor directory."
            },
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/python-scrapy.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 1024,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "js-start",
            "name": "getting_started_node",
            "label": "Start with JavaScript",
            "description": "This example shows how to write a very simple Actor in JavaScript using the Apify SDK. It reads and validates user input, performs a simple computation and saves the result to storage.",
            "category": "javascript",
            "technologies": [
                "nodejs"
            ],
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-start.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 256,
                "timeoutSecs": 360
            }
        },
        {
            "id": "ts-start",
            "name": "getting_started_typescript",
            "label": "Start with TypeScript",
            "category": "typescript",
            "technologies": [
                "nodejs"
            ],
            "description": "This example shows how to write a very simple Actor in TypeScript using the Apify SDK. It reads and validates user input, performs a simple computation and saves the result to storage.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/ts-start.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 256,
                "timeoutSecs": 360
            }
        },
        {
            "id": "js-crawlee-cheerio",
            "name": "project_cheerio_crawler_js",
            "label": "Crawlee & Cheerio",
            "category": "javascript",
            "technologies": [
                "nodejs",
                "crawlee",
                "cheerio"
            ],
            "description": "A website crawler built with Crawlee that uses raw HTTP requests and Cheerio to parse HTML. It is fast, but it doesn't run on-page JavaScript and can't pass JavaScript based anti-scraping challenges.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-crawlee-cheerio.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 512,
                "timeoutSecs": 3600
            },
            "skipOptionalDeps": true
        },
        {
            "id": "js-crawlee-puppeteer-chrome",
            "name": "project_puppeteer_crawler_js",
            "label": "Crawlee & Puppeteer & Chrome",
            "category": "javascript",
            "technologies": [
                "nodejs",
                "crawlee",
                "puppeteer",
                "chrome"
            ],
            "description": "This Actor built with Crawlee uses Puppeteer and headless Chrome to scrape a website. Headless browsers are useful to render JavaScript and pass anti-scraping challenges, but they are slower than their pure HTTP counterparts. See also Playwright for a similar, but more modern experience.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-crawlee-puppeteer-chrome.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 4096,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "js-crawlee-playwright-chrome",
            "name": "project_playwright_crawler_js",
            "label": "Crawlee & Playwright & Chrome",
            "category": "javascript",
            "technologies": [
                "nodejs",
                "crawlee",
                "playwright",
                "chrome"
            ],
            "description": "This scraper uses Crawlee to orchestrate Playwright and headless Chrome. Playwright is a more modern version of Puppeteer that makes using headless browsers even more convenient and user-friendly.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-crawlee-playwright-chrome.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 4096,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "ts-crawlee-cheerio",
            "name": "project_cheerio_crawler_ts",
            "label": "Crawlee & Cheerio",
            "category": "typescript",
            "technologies": [
                "nodejs",
                "crawlee",
                "cheerio"
            ],
            "description": "A website crawler built with Crawlee that uses raw HTTP requests and Cheerio to parse HTML. It is fast, but it doesn't run on-page JavaScript and can't pass JavaScript based anti-scraping challenges.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/ts-crawlee-cheerio.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 512,
                "timeoutSecs": 3600
            },
            "skipOptionalDeps": true
        },
        {
            "id": "ts-crawlee-puppeteer-chrome",
            "name": "project_puppeteer_crawler_ts",
            "label": "Crawlee & Puppeteer & Chrome",
            "category": "typescript",
            "technologies": [
                "nodejs",
                "crawlee",
                "puppeteer",
                "chrome"
            ],
            "description": "This Actor built with Crawlee uses Puppeteer and headless Chrome to scrape a website. Headless browsers are useful to render JavaScript and pass anti-scraping challenges, but they are slower than their pure HTTP counterparts. See also Playwright for a similar, but more modern experience.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/ts-crawlee-puppeteer-chrome.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 4096,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "ts-crawlee-playwright-chrome",
            "name": "project_playwright_crawler_ts",
            "label": "Crawlee & Playwright & Chrome",
            "category": "typescript",
            "technologies": [
                "nodejs",
                "crawlee",
                "playwright",
                "chrome"
            ],
            "description": "This scraper uses Crawlee to orchestrate Playwright and headless Chrome. Playwright is a more modern version of Puppeteer that makes using headless browsers even more convenient and user-friendly.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/ts-crawlee-playwright-chrome.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 4096,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "js-empty",
            "name": "project_empty",
            "label": "Start from scratch",
            "category": "javascript",
            "technologies": [
                "nodejs"
            ],
            "description": "Empty starter actor. A blank slate with minimal starting code for developing actors from scratch using JavaScript.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-empty.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 2048,
                "timeoutSecs": 3600
            }
        }
    ]
}
