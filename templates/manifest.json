{
    "templates": [
        {
            "id": "python-start",
            "name": "python-start",
            "label": "Start with Python",
            "category": "python",
            "description": "A simple Python example of core Actor and Apify SDK features. It reads and validates user input with schema, computes a result and saves it to storage.",
            "messages": {
                "postCreate": "To install additional Python packages, you need to activate the virtual environment in the \".venv\" folder in the actor directory."
            },
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/python-start.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 1024,
                "timeoutSecs": 3600
            },
            "aliases": [
                "getting_started_python"
            ]
        },
        {
            "id": "python-beautifulsoup",
            "name": "python-beautifulsoup",
            "label": "BeautifulSoup & Requests",
            "category": "python",
            "technologies": [
                "requests",
                "beautifulsoup"
            ],
            "description": "Example of a web scraper that uses Python Requests to scrape HTML from URLs provided on input, parses it using BeautifulSoup and saves results to storage.",
            "messages": {
                "postCreate": "To install additional Python packages, you need to activate the virtual environment in the \".venv\" folder in the actor directory."
            },
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/python-beautifulsoup.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 1024,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "python-playwright",
            "name": "python-playwright",
            "label": "Playwright & Chrome",
            "category": "python",
            "technologies": [
                "playwright",
                "chrome"
            ],
            "description": "Crawler example that uses headless Chrome driven by Playwright to scrape a website. Headless browsers render JavaScript and can help when getting blocked.",
            "messages": {
                "postCreate": "To run this actor, you need to have Playwright's browsers installed.\nTo do so, activate the virtual environment in the \".venv\" folder in the actor directory, and run \"playwright install --with-deps\".\nTo install additional Python packages, you need also need to activate the virtual environment in the \".venv\" folder in the actor directory.\n"
            },
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/python-playwright.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 1024,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "python-selenium",
            "name": "python-selenium",
            "label": "Selenium & Chrome",
            "category": "python",
            "technologies": [
                "selenium",
                "chrome"
            ],
            "description": "Scraper example built with Selenium and headless Chrome browser to scrape a website and save the results to storage. A popular alternative to Playwright.",
            "messages": {
                "postCreate": "To run this actor, you need to have the Selenium ChromeDriver installed.\nTo install additional Python packages, you need to activate the virtual environment in the \".venv\" folder in the actor directory."
            },
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/python-selenium.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 1024,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "python-scrapy",
            "name": "python-scrapy",
            "label": "Scrapy",
            "category": "python",
            "technologies": [
                "scrapy"
            ],
            "description": "This example Scrapy spider scrapes quotes filtered by input parameters. It shows how to use Apify SDK for Python and Scrapy pipelines to save results.",
            "messages": {
                "postCreate": "To install additional Python packages, you need to activate the virtual environment in the \".venv\" folder in the actor directory."
            },
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/python-scrapy.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 1024,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "js-start",
            "name": "getting_started_node",
            "label": "Start with JavaScript",
            "description": "A simple JavaScript example of core Actor and Apify SDK features. It reads and validates user input with schema, computes a result and saves it to storage.",
            "category": "javascript",
            "technologies": [
                "nodejs"
            ],
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-start.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 256,
                "timeoutSecs": 360
            }
        },
        {
            "id": "ts-start",
            "name": "getting_started_typescript",
            "label": "Start with TypeScript",
            "category": "typescript",
            "technologies": [
                "nodejs"
            ],
            "description": "A simple TypeScript example of core Actor and Apify SDK features. It reads and validates user input with schema, computes a result and saves it to storage.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/ts-start.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 256,
                "timeoutSecs": 360
            }
        },
        {
            "id": "js-crawlee-cheerio",
            "name": "project_cheerio_crawler_js",
            "label": "Crawlee & Cheerio",
            "category": "javascript",
            "technologies": [
                "nodejs",
                "crawlee",
                "cheerio"
            ],
            "description": "A scraper example that uses HTTP requests and Cheerio to parse HTML. It's fast, but it can't run the website's JavaScript or pass JS anti-scraping challenges.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-crawlee-cheerio.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 512,
                "timeoutSecs": 3600
            },
            "skipOptionalDeps": true
        },
        {
            "id": "js-crawlee-puppeteer-chrome",
            "name": "project_puppeteer_crawler_js",
            "label": "Crawlee & Puppeteer & Chrome",
            "category": "javascript",
            "technologies": [
                "nodejs",
                "crawlee",
                "puppeteer",
                "chrome"
            ],
            "description": "Example of a Puppeteer and headless Chrome web scraper. Headless browsers render JavaScript and are harder to block, but they're slower than plain HTTP.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-crawlee-puppeteer-chrome.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 4096,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "js-crawlee-playwright-chrome",
            "name": "project_playwright_crawler_js",
            "label": "Crawlee & Playwright & Chrome",
            "category": "javascript",
            "technologies": [
                "nodejs",
                "crawlee",
                "playwright",
                "chrome"
            ],
            "description": "Web scraper example with Crawlee, Playwright and headless Chrome. Playwright is more modern, user-friendly and harder to block than Puppeteer.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-crawlee-playwright-chrome.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 4096,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "ts-crawlee-cheerio",
            "name": "project_cheerio_crawler_ts",
            "label": "Crawlee & Cheerio",
            "category": "typescript",
            "technologies": [
                "nodejs",
                "crawlee",
                "cheerio"
            ],
            "description": "A scraper example that uses HTTP requests and Cheerio to parse HTML. It's fast, but it can't run the website's JavaScript or pass JS anti-scraping challenges.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/ts-crawlee-cheerio.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 512,
                "timeoutSecs": 3600
            },
            "skipOptionalDeps": true
        },
        {
            "id": "ts-crawlee-puppeteer-chrome",
            "name": "project_puppeteer_crawler_ts",
            "label": "Crawlee & Puppeteer & Chrome",
            "category": "typescript",
            "technologies": [
                "nodejs",
                "crawlee",
                "puppeteer",
                "chrome"
            ],
            "description": "Example of a Puppeteer and headless Chrome web scraper. Headless browsers render JavaScript and are harder to block, but they're slower than plain HTTP.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/ts-crawlee-puppeteer-chrome.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 4096,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "ts-crawlee-playwright-chrome",
            "name": "project_playwright_crawler_ts",
            "label": "Crawlee & Playwright & Chrome",
            "category": "typescript",
            "technologies": [
                "nodejs",
                "crawlee",
                "playwright",
                "chrome"
            ],
            "description": "Web scraper example with Crawlee, Playwright and headless Chrome. Playwright is more modern, user-friendly and harder to block than Puppeteer.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/ts-crawlee-playwright-chrome.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 4096,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "ts-playwright-test-runner",
            "name": "project_playwright_test_runner",
            "label": "Playwright & Chrome Test Runner",
            "category": "typescript",
            "technologies": [
                "nodejs",
                "playwright",
                "chrome"
            ],
            "description": "Example of using the Playwright Test project to run automated website tests in the cloud and display their results. Usable as an API.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/ts-playwright-test-runner.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 4096,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "js-empty",
            "name": "project_empty",
            "label": "Empty JavaScript Actor",
            "category": "javascript",
            "technologies": [
                "nodejs"
            ],
            "description": "Empty starter Actor. A blank slate with minimal starting code. Useful for quick scripting without having to delete bunch of stuff from other templates.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-empty.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 2048,
                "timeoutSecs": 3600
            }
        },
        {
            "id": "js-cypress",
            "name": "project_cypress",
            "label": "Cypress",
            "category": "javascript",
            "technologies": [
                "nodejs",
                "cypress"
            ],
            "description": "Example of running Cypress tests and saving their results on the Apify platform. JSON results are saved to Dataset, videos to Key-value store.",
            "archiveUrl": "https://github.com/apify/actor-templates/blob/master/dist/templates/js-cypress.zip?raw=true",
            "defaultRunOptions": {
                "build": "latest",
                "memoryMbytes": 4096,
                "timeoutSecs": 3600
            }
        }
    ]
}
